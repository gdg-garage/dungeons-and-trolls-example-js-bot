/**
 * Dungeons and Trolls
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DungeonsandtrollsAttributes from './DungeonsandtrollsAttributes';
import DungeonsandtrollsDamageType from './DungeonsandtrollsDamageType';
import DungeonsandtrollsSkillEffect from './DungeonsandtrollsSkillEffect';
import DungeonsandtrollsSkillGenericFlags from './DungeonsandtrollsSkillGenericFlags';
import SkillTarget from './SkillTarget';

/**
 * The DungeonsandtrollsSkill model module.
 * @module model/DungeonsandtrollsSkill
 * @version 1.7.0
 */
class DungeonsandtrollsSkill {
    /**
     * Constructs a new <code>DungeonsandtrollsSkill</code>.
     * @alias module:model/DungeonsandtrollsSkill
     */
    constructor() { 
        
        DungeonsandtrollsSkill.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DungeonsandtrollsSkill</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DungeonsandtrollsSkill} obj Optional instance to populate.
     * @return {module:model/DungeonsandtrollsSkill} The populated <code>DungeonsandtrollsSkill</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DungeonsandtrollsSkill();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('target')) {
                obj['target'] = SkillTarget.constructFromObject(data['target']);
            }
            if (data.hasOwnProperty('cost')) {
                obj['cost'] = DungeonsandtrollsAttributes.constructFromObject(data['cost']);
            }
            if (data.hasOwnProperty('range')) {
                obj['range'] = DungeonsandtrollsAttributes.constructFromObject(data['range']);
            }
            if (data.hasOwnProperty('radius')) {
                obj['radius'] = DungeonsandtrollsAttributes.constructFromObject(data['radius']);
            }
            if (data.hasOwnProperty('duration')) {
                obj['duration'] = DungeonsandtrollsAttributes.constructFromObject(data['duration']);
            }
            if (data.hasOwnProperty('damageAmount')) {
                obj['damageAmount'] = DungeonsandtrollsAttributes.constructFromObject(data['damageAmount']);
            }
            if (data.hasOwnProperty('damageType')) {
                obj['damageType'] = DungeonsandtrollsDamageType.constructFromObject(data['damageType']);
            }
            if (data.hasOwnProperty('casterEffects')) {
                obj['casterEffects'] = DungeonsandtrollsSkillEffect.constructFromObject(data['casterEffects']);
            }
            if (data.hasOwnProperty('targetEffects')) {
                obj['targetEffects'] = DungeonsandtrollsSkillEffect.constructFromObject(data['targetEffects']);
            }
            if (data.hasOwnProperty('flags')) {
                obj['flags'] = DungeonsandtrollsSkillGenericFlags.constructFromObject(data['flags']);
            }
        }
        return obj;
    }


}

/**
 * @member {String} id
 */
DungeonsandtrollsSkill.prototype['id'] = undefined;

/**
 * @member {String} name
 */
DungeonsandtrollsSkill.prototype['name'] = undefined;

/**
 * @member {module:model/SkillTarget} target
 */
DungeonsandtrollsSkill.prototype['target'] = undefined;

/**
 * @member {module:model/DungeonsandtrollsAttributes} cost
 */
DungeonsandtrollsSkill.prototype['cost'] = undefined;

/**
 * @member {module:model/DungeonsandtrollsAttributes} range
 */
DungeonsandtrollsSkill.prototype['range'] = undefined;

/**
 * @member {module:model/DungeonsandtrollsAttributes} radius
 */
DungeonsandtrollsSkill.prototype['radius'] = undefined;

/**
 * @member {module:model/DungeonsandtrollsAttributes} duration
 */
DungeonsandtrollsSkill.prototype['duration'] = undefined;

/**
 * @member {module:model/DungeonsandtrollsAttributes} damageAmount
 */
DungeonsandtrollsSkill.prototype['damageAmount'] = undefined;

/**
 * @member {module:model/DungeonsandtrollsDamageType} damageType
 */
DungeonsandtrollsSkill.prototype['damageType'] = undefined;

/**
 * @member {module:model/DungeonsandtrollsSkillEffect} casterEffects
 */
DungeonsandtrollsSkill.prototype['casterEffects'] = undefined;

/**
 * @member {module:model/DungeonsandtrollsSkillEffect} targetEffects
 */
DungeonsandtrollsSkill.prototype['targetEffects'] = undefined;

/**
 * @member {module:model/DungeonsandtrollsSkillGenericFlags} flags
 */
DungeonsandtrollsSkill.prototype['flags'] = undefined;






export default DungeonsandtrollsSkill;

