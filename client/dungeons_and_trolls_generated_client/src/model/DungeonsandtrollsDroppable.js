/**
 * Dungeons and Trolls
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DungeonsandtrollsDecoration from './DungeonsandtrollsDecoration';
import DungeonsandtrollsItem from './DungeonsandtrollsItem';
import DungeonsandtrollsKey from './DungeonsandtrollsKey';
import DungeonsandtrollsMonster from './DungeonsandtrollsMonster';
import DungeonsandtrollsSkill from './DungeonsandtrollsSkill';
import DungeonsandtrollsWaypoint from './DungeonsandtrollsWaypoint';

/**
 * The DungeonsandtrollsDroppable model module.
 * @module model/DungeonsandtrollsDroppable
 * @version 1.7.0
 */
class DungeonsandtrollsDroppable {
    /**
     * Constructs a new <code>DungeonsandtrollsDroppable</code>.
     * @alias module:model/DungeonsandtrollsDroppable
     */
    constructor() { 
        
        DungeonsandtrollsDroppable.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DungeonsandtrollsDroppable</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DungeonsandtrollsDroppable} obj Optional instance to populate.
     * @return {module:model/DungeonsandtrollsDroppable} The populated <code>DungeonsandtrollsDroppable</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DungeonsandtrollsDroppable();

            if (data.hasOwnProperty('skill')) {
                obj['skill'] = DungeonsandtrollsSkill.constructFromObject(data['skill']);
            }
            if (data.hasOwnProperty('item')) {
                obj['item'] = DungeonsandtrollsItem.constructFromObject(data['item']);
            }
            if (data.hasOwnProperty('monster')) {
                obj['monster'] = DungeonsandtrollsMonster.constructFromObject(data['monster']);
            }
            if (data.hasOwnProperty('decoration')) {
                obj['decoration'] = DungeonsandtrollsDecoration.constructFromObject(data['decoration']);
            }
            if (data.hasOwnProperty('waypoint')) {
                obj['waypoint'] = DungeonsandtrollsWaypoint.constructFromObject(data['waypoint']);
            }
            if (data.hasOwnProperty('key')) {
                obj['key'] = DungeonsandtrollsKey.constructFromObject(data['key']);
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/DungeonsandtrollsSkill} skill
 */
DungeonsandtrollsDroppable.prototype['skill'] = undefined;

/**
 * @member {module:model/DungeonsandtrollsItem} item
 */
DungeonsandtrollsDroppable.prototype['item'] = undefined;

/**
 * @member {module:model/DungeonsandtrollsMonster} monster
 */
DungeonsandtrollsDroppable.prototype['monster'] = undefined;

/**
 * @member {module:model/DungeonsandtrollsDecoration} decoration
 */
DungeonsandtrollsDroppable.prototype['decoration'] = undefined;

/**
 * @member {module:model/DungeonsandtrollsWaypoint} waypoint
 */
DungeonsandtrollsDroppable.prototype['waypoint'] = undefined;

/**
 * @member {module:model/DungeonsandtrollsKey} key
 */
DungeonsandtrollsDroppable.prototype['key'] = undefined;






export default DungeonsandtrollsDroppable;

