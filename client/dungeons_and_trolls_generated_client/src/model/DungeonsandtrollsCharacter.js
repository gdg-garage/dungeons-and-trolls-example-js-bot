/**
 * Dungeons and Trolls
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DungeonsandtrollsAttributes from './DungeonsandtrollsAttributes';
import DungeonsandtrollsCoordinates from './DungeonsandtrollsCoordinates';
import DungeonsandtrollsEffect from './DungeonsandtrollsEffect';
import DungeonsandtrollsItem from './DungeonsandtrollsItem';
import DungeonsandtrollsStun from './DungeonsandtrollsStun';

/**
 * The DungeonsandtrollsCharacter model module.
 * @module model/DungeonsandtrollsCharacter
 * @version 1.7.0
 */
class DungeonsandtrollsCharacter {
    /**
     * Constructs a new <code>DungeonsandtrollsCharacter</code>.
     * @alias module:model/DungeonsandtrollsCharacter
     */
    constructor() { 
        
        DungeonsandtrollsCharacter.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DungeonsandtrollsCharacter</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DungeonsandtrollsCharacter} obj Optional instance to populate.
     * @return {module:model/DungeonsandtrollsCharacter} The populated <code>DungeonsandtrollsCharacter</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DungeonsandtrollsCharacter();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('attributes')) {
                obj['attributes'] = DungeonsandtrollsAttributes.constructFromObject(data['attributes']);
            }
            if (data.hasOwnProperty('money')) {
                obj['money'] = ApiClient.convertToType(data['money'], 'Number');
            }
            if (data.hasOwnProperty('equip')) {
                obj['equip'] = ApiClient.convertToType(data['equip'], [DungeonsandtrollsItem]);
            }
            if (data.hasOwnProperty('score')) {
                obj['score'] = ApiClient.convertToType(data['score'], 'Number');
            }
            if (data.hasOwnProperty('skillPoints')) {
                obj['skillPoints'] = ApiClient.convertToType(data['skillPoints'], 'Number');
            }
            if (data.hasOwnProperty('effects')) {
                obj['effects'] = ApiClient.convertToType(data['effects'], [DungeonsandtrollsEffect]);
            }
            if (data.hasOwnProperty('maxAttributes')) {
                obj['maxAttributes'] = DungeonsandtrollsAttributes.constructFromObject(data['maxAttributes']);
            }
            if (data.hasOwnProperty('lastDamageTaken')) {
                obj['lastDamageTaken'] = ApiClient.convertToType(data['lastDamageTaken'], 'Number');
            }
            if (data.hasOwnProperty('coordinates')) {
                obj['coordinates'] = DungeonsandtrollsCoordinates.constructFromObject(data['coordinates']);
            }
            if (data.hasOwnProperty('stun')) {
                obj['stun'] = DungeonsandtrollsStun.constructFromObject(data['stun']);
            }
        }
        return obj;
    }


}

/**
 * @member {String} id
 */
DungeonsandtrollsCharacter.prototype['id'] = undefined;

/**
 * @member {String} name
 */
DungeonsandtrollsCharacter.prototype['name'] = undefined;

/**
 * @member {module:model/DungeonsandtrollsAttributes} attributes
 */
DungeonsandtrollsCharacter.prototype['attributes'] = undefined;

/**
 * @member {Number} money
 */
DungeonsandtrollsCharacter.prototype['money'] = undefined;

/**
 * @member {Array.<module:model/DungeonsandtrollsItem>} equip
 */
DungeonsandtrollsCharacter.prototype['equip'] = undefined;

/**
 * @member {Number} score
 */
DungeonsandtrollsCharacter.prototype['score'] = undefined;

/**
 * @member {Number} skillPoints
 */
DungeonsandtrollsCharacter.prototype['skillPoints'] = undefined;

/**
 * @member {Array.<module:model/DungeonsandtrollsEffect>} effects
 */
DungeonsandtrollsCharacter.prototype['effects'] = undefined;

/**
 * @member {module:model/DungeonsandtrollsAttributes} maxAttributes
 */
DungeonsandtrollsCharacter.prototype['maxAttributes'] = undefined;

/**
 * @member {Number} lastDamageTaken
 */
DungeonsandtrollsCharacter.prototype['lastDamageTaken'] = undefined;

/**
 * @member {module:model/DungeonsandtrollsCoordinates} coordinates
 */
DungeonsandtrollsCharacter.prototype['coordinates'] = undefined;

/**
 * @member {module:model/DungeonsandtrollsStun} stun
 */
DungeonsandtrollsCharacter.prototype['stun'] = undefined;






export default DungeonsandtrollsCharacter;

