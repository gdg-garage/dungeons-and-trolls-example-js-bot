/**
 * Dungeons and Trolls
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DungeonsandtrollsCharacter from './DungeonsandtrollsCharacter';
import DungeonsandtrollsDecoration from './DungeonsandtrollsDecoration';
import DungeonsandtrollsEffect from './DungeonsandtrollsEffect';
import DungeonsandtrollsItem from './DungeonsandtrollsItem';
import DungeonsandtrollsMonster from './DungeonsandtrollsMonster';
import DungeonsandtrollsPosition from './DungeonsandtrollsPosition';
import DungeonsandtrollsWaypoint from './DungeonsandtrollsWaypoint';

/**
 * The DungeonsandtrollsMapObjects model module.
 * @module model/DungeonsandtrollsMapObjects
 * @version 1.7.0
 */
class DungeonsandtrollsMapObjects {
    /**
     * Constructs a new <code>DungeonsandtrollsMapObjects</code>.
     * @alias module:model/DungeonsandtrollsMapObjects
     */
    constructor() { 
        
        DungeonsandtrollsMapObjects.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DungeonsandtrollsMapObjects</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DungeonsandtrollsMapObjects} obj Optional instance to populate.
     * @return {module:model/DungeonsandtrollsMapObjects} The populated <code>DungeonsandtrollsMapObjects</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DungeonsandtrollsMapObjects();

            if (data.hasOwnProperty('position')) {
                obj['position'] = DungeonsandtrollsPosition.constructFromObject(data['position']);
            }
            if (data.hasOwnProperty('monsters')) {
                obj['monsters'] = ApiClient.convertToType(data['monsters'], [DungeonsandtrollsMonster]);
            }
            if (data.hasOwnProperty('players')) {
                obj['players'] = ApiClient.convertToType(data['players'], [DungeonsandtrollsCharacter]);
            }
            if (data.hasOwnProperty('isStairs')) {
                obj['isStairs'] = ApiClient.convertToType(data['isStairs'], 'Boolean');
            }
            if (data.hasOwnProperty('portal')) {
                obj['portal'] = DungeonsandtrollsWaypoint.constructFromObject(data['portal']);
            }
            if (data.hasOwnProperty('decorations')) {
                obj['decorations'] = ApiClient.convertToType(data['decorations'], [DungeonsandtrollsDecoration]);
            }
            if (data.hasOwnProperty('effects')) {
                obj['effects'] = ApiClient.convertToType(data['effects'], [DungeonsandtrollsEffect]);
            }
            if (data.hasOwnProperty('items')) {
                obj['items'] = ApiClient.convertToType(data['items'], [DungeonsandtrollsItem]);
            }
            if (data.hasOwnProperty('isFree')) {
                obj['isFree'] = ApiClient.convertToType(data['isFree'], 'Boolean');
            }
            if (data.hasOwnProperty('isWall')) {
                obj['isWall'] = ApiClient.convertToType(data['isWall'], 'Boolean');
            }
            if (data.hasOwnProperty('isDoor')) {
                obj['isDoor'] = ApiClient.convertToType(data['isDoor'], 'Boolean');
            }
            if (data.hasOwnProperty('isSpawn')) {
                obj['isSpawn'] = ApiClient.convertToType(data['isSpawn'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/DungeonsandtrollsPosition} position
 */
DungeonsandtrollsMapObjects.prototype['position'] = undefined;

/**
 * @member {Array.<module:model/DungeonsandtrollsMonster>} monsters
 */
DungeonsandtrollsMapObjects.prototype['monsters'] = undefined;

/**
 * @member {Array.<module:model/DungeonsandtrollsCharacter>} players
 */
DungeonsandtrollsMapObjects.prototype['players'] = undefined;

/**
 * @member {Boolean} isStairs
 */
DungeonsandtrollsMapObjects.prototype['isStairs'] = undefined;

/**
 * @member {module:model/DungeonsandtrollsWaypoint} portal
 */
DungeonsandtrollsMapObjects.prototype['portal'] = undefined;

/**
 * @member {Array.<module:model/DungeonsandtrollsDecoration>} decorations
 */
DungeonsandtrollsMapObjects.prototype['decorations'] = undefined;

/**
 * @member {Array.<module:model/DungeonsandtrollsEffect>} effects
 */
DungeonsandtrollsMapObjects.prototype['effects'] = undefined;

/**
 * @member {Array.<module:model/DungeonsandtrollsItem>} items
 */
DungeonsandtrollsMapObjects.prototype['items'] = undefined;

/**
 * @member {Boolean} isFree
 */
DungeonsandtrollsMapObjects.prototype['isFree'] = undefined;

/**
 * @member {Boolean} isWall
 */
DungeonsandtrollsMapObjects.prototype['isWall'] = undefined;

/**
 * @member {Boolean} isDoor
 */
DungeonsandtrollsMapObjects.prototype['isDoor'] = undefined;

/**
 * @member {Boolean} isSpawn
 */
DungeonsandtrollsMapObjects.prototype['isSpawn'] = undefined;






export default DungeonsandtrollsMapObjects;

