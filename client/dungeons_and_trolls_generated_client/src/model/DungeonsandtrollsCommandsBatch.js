/**
 * Dungeons and Trolls
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DungeonsandtrollsAttributes from './DungeonsandtrollsAttributes';
import DungeonsandtrollsIdentifier from './DungeonsandtrollsIdentifier';
import DungeonsandtrollsIdentifiers from './DungeonsandtrollsIdentifiers';
import DungeonsandtrollsMessage from './DungeonsandtrollsMessage';
import DungeonsandtrollsPosition from './DungeonsandtrollsPosition';
import DungeonsandtrollsSkillUse from './DungeonsandtrollsSkillUse';

/**
 * The DungeonsandtrollsCommandsBatch model module.
 * @module model/DungeonsandtrollsCommandsBatch
 * @version 1.7.0
 */
class DungeonsandtrollsCommandsBatch {
    /**
     * Constructs a new <code>DungeonsandtrollsCommandsBatch</code>.
     * @alias module:model/DungeonsandtrollsCommandsBatch
     */
    constructor() { 
        
        DungeonsandtrollsCommandsBatch.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DungeonsandtrollsCommandsBatch</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DungeonsandtrollsCommandsBatch} obj Optional instance to populate.
     * @return {module:model/DungeonsandtrollsCommandsBatch} The populated <code>DungeonsandtrollsCommandsBatch</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DungeonsandtrollsCommandsBatch();

            if (data.hasOwnProperty('buy')) {
                obj['buy'] = DungeonsandtrollsIdentifiers.constructFromObject(data['buy']);
            }
            if (data.hasOwnProperty('pickUp')) {
                obj['pickUp'] = DungeonsandtrollsIdentifier.constructFromObject(data['pickUp']);
            }
            if (data.hasOwnProperty('move')) {
                obj['move'] = DungeonsandtrollsPosition.constructFromObject(data['move']);
            }
            if (data.hasOwnProperty('skill')) {
                obj['skill'] = DungeonsandtrollsSkillUse.constructFromObject(data['skill']);
            }
            if (data.hasOwnProperty('yell')) {
                obj['yell'] = DungeonsandtrollsMessage.constructFromObject(data['yell']);
            }
            if (data.hasOwnProperty('assignSkillPoints')) {
                obj['assignSkillPoints'] = DungeonsandtrollsAttributes.constructFromObject(data['assignSkillPoints']);
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/DungeonsandtrollsIdentifiers} buy
 */
DungeonsandtrollsCommandsBatch.prototype['buy'] = undefined;

/**
 * @member {module:model/DungeonsandtrollsIdentifier} pickUp
 */
DungeonsandtrollsCommandsBatch.prototype['pickUp'] = undefined;

/**
 * @member {module:model/DungeonsandtrollsPosition} move
 */
DungeonsandtrollsCommandsBatch.prototype['move'] = undefined;

/**
 * @member {module:model/DungeonsandtrollsSkillUse} skill
 */
DungeonsandtrollsCommandsBatch.prototype['skill'] = undefined;

/**
 * @member {module:model/DungeonsandtrollsMessage} yell
 */
DungeonsandtrollsCommandsBatch.prototype['yell'] = undefined;

/**
 * @member {module:model/DungeonsandtrollsAttributes} assignSkillPoints
 */
DungeonsandtrollsCommandsBatch.prototype['assignSkillPoints'] = undefined;






export default DungeonsandtrollsCommandsBatch;

