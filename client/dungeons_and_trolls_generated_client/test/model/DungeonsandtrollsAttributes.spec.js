/**
 * Dungeons and Trolls
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DungeonsAndTrolls);
  }
}(this, function(expect, DungeonsAndTrolls) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DungeonsAndTrolls.DungeonsandtrollsAttributes();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DungeonsandtrollsAttributes', function() {
    it('should create an instance of DungeonsandtrollsAttributes', function() {
      // uncomment below and update the code to test DungeonsandtrollsAttributes
      //var instance = new DungeonsAndTrolls.DungeonsandtrollsAttributes();
      //expect(instance).to.be.a(DungeonsAndTrolls.DungeonsandtrollsAttributes);
    });

    it('should have the property strength (base name: "strength")', function() {
      // uncomment below and update the code to test the property strength
      //var instance = new DungeonsAndTrolls.DungeonsandtrollsAttributes();
      //expect(instance).to.be();
    });

    it('should have the property dexterity (base name: "dexterity")', function() {
      // uncomment below and update the code to test the property dexterity
      //var instance = new DungeonsAndTrolls.DungeonsandtrollsAttributes();
      //expect(instance).to.be();
    });

    it('should have the property intelligence (base name: "intelligence")', function() {
      // uncomment below and update the code to test the property intelligence
      //var instance = new DungeonsAndTrolls.DungeonsandtrollsAttributes();
      //expect(instance).to.be();
    });

    it('should have the property willpower (base name: "willpower")', function() {
      // uncomment below and update the code to test the property willpower
      //var instance = new DungeonsAndTrolls.DungeonsandtrollsAttributes();
      //expect(instance).to.be();
    });

    it('should have the property constitution (base name: "constitution")', function() {
      // uncomment below and update the code to test the property constitution
      //var instance = new DungeonsAndTrolls.DungeonsandtrollsAttributes();
      //expect(instance).to.be();
    });

    it('should have the property slashResist (base name: "slashResist")', function() {
      // uncomment below and update the code to test the property slashResist
      //var instance = new DungeonsAndTrolls.DungeonsandtrollsAttributes();
      //expect(instance).to.be();
    });

    it('should have the property pierceResist (base name: "pierceResist")', function() {
      // uncomment below and update the code to test the property pierceResist
      //var instance = new DungeonsAndTrolls.DungeonsandtrollsAttributes();
      //expect(instance).to.be();
    });

    it('should have the property fireResist (base name: "fireResist")', function() {
      // uncomment below and update the code to test the property fireResist
      //var instance = new DungeonsAndTrolls.DungeonsandtrollsAttributes();
      //expect(instance).to.be();
    });

    it('should have the property poisonResist (base name: "poisonResist")', function() {
      // uncomment below and update the code to test the property poisonResist
      //var instance = new DungeonsAndTrolls.DungeonsandtrollsAttributes();
      //expect(instance).to.be();
    });

    it('should have the property electricResist (base name: "electricResist")', function() {
      // uncomment below and update the code to test the property electricResist
      //var instance = new DungeonsAndTrolls.DungeonsandtrollsAttributes();
      //expect(instance).to.be();
    });

    it('should have the property life (base name: "life")', function() {
      // uncomment below and update the code to test the property life
      //var instance = new DungeonsAndTrolls.DungeonsandtrollsAttributes();
      //expect(instance).to.be();
    });

    it('should have the property stamina (base name: "stamina")', function() {
      // uncomment below and update the code to test the property stamina
      //var instance = new DungeonsAndTrolls.DungeonsandtrollsAttributes();
      //expect(instance).to.be();
    });

    it('should have the property mana (base name: "mana")', function() {
      // uncomment below and update the code to test the property mana
      //var instance = new DungeonsAndTrolls.DungeonsandtrollsAttributes();
      //expect(instance).to.be();
    });

    it('should have the property constant (base name: "constant")', function() {
      // uncomment below and update the code to test the property constant
      //var instance = new DungeonsAndTrolls.DungeonsandtrollsAttributes();
      //expect(instance).to.be();
    });

  });

}));
